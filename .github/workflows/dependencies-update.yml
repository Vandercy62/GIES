# 🔄 Dependency Updates - PRIMOTEX ERP Mobile
# Automatiza atualizações de dependências com testes

name: Dependencies Update

on:
  schedule:
    # Executa toda segunda-feira às 9:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

defaults:
  run:
    working-directory: ./frontend/mobile

jobs:
  # 🔍 Check for updates
  check-updates:
    name: 🔍 Check Dependencies
    runs-on: ubuntu-latest
    outputs:
      has-updates: ${{ steps.check.outputs.has-updates }}
      updates-summary: ${{ steps.check.outputs.updates-summary }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/mobile/package-lock.json

      - name: 📦 Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: 🔍 Check for updates
        id: check
        run: |
          UPDATE_TYPE="${{ inputs.update_type || 'patch' }}"
          
          if [[ "$UPDATE_TYPE" == "patch" ]]; then
            UPDATES=$(ncu --jsonUpgraded --target patch)
          elif [[ "$UPDATE_TYPE" == "minor" ]]; then
            UPDATES=$(ncu --jsonUpgraded --target minor)
          else
            UPDATES=$(ncu --jsonUpgraded)
          fi
          
          if [[ "$UPDATES" != "{}" ]]; then
            echo "has-updates=true" >> $GITHUB_OUTPUT
            echo "updates-summary<<EOF" >> $GITHUB_OUTPUT
            echo "$UPDATES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            
            echo "📦 Found updates:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            echo "$UPDATES" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "has-updates=false" >> $GITHUB_OUTPUT
            echo "✅ No updates available for $UPDATE_TYPE level" >> $GITHUB_STEP_SUMMARY
          fi

  # 🔄 Apply updates
  apply-updates:
    name: 🔄 Apply Updates
    runs-on: ubuntu-latest
    needs: check-updates
    if: needs.check-updates.outputs.has-updates == 'true'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/mobile/package-lock.json

      - name: 📦 Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: 🔄 Update dependencies
        run: |
          UPDATE_TYPE="${{ inputs.update_type || 'patch' }}"
          
          if [[ "$UPDATE_TYPE" == "patch" ]]; then
            ncu -u --target patch
          elif [[ "$UPDATE_TYPE" == "minor" ]]; then
            ncu -u --target minor
          else
            ncu -u
          fi

      - name: 📦 Install updated dependencies
        run: npm install

      - name: 🧪 Run tests
        run: npm test -- --watchAll=false --passWithNoTests

      - name: 🔧 Validate build
        run: |
          npm install -g @expo/cli
          npx expo doctor

      - name: 📝 Generate changelog
        id: changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## 📦 Dependency Updates" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "Updated packages (${{ inputs.update_type || 'patch' }} level):" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "${{ needs.check-updates.outputs.updates-summary }}" | jq -r 'to_entries[] | "- **\(.key)**: \(.value)"' >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 🧪 Test Results" >> $GITHUB_OUTPUT
          echo "- ✅ All tests passing" >> $GITHUB_OUTPUT
          echo "- ✅ Build validation successful" >> $GITHUB_OUTPUT
          echo "- ✅ Expo configuration valid" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "---" >> $GITHUB_OUTPUT
          echo "*Automated by dependency update workflow*" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 🔀 Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            📦 Update mobile dependencies (${{ inputs.update_type || 'patch' }} level)
            
            Auto-generated dependency updates:
            ${{ needs.check-updates.outputs.updates-summary }}
          title: 📦 Update Mobile Dependencies (${{ inputs.update_type || 'patch' }} level)
          body: ${{ steps.changelog.outputs.changelog }}
          branch: dependency-updates/mobile-${{ inputs.update_type || 'patch' }}-${{ github.run_number }}
          base: develop
          labels: |
            dependencies
            mobile
            automated
          reviewers: |
            vandercy62
          draft: false

  # 🔒 Security audit
  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/mobile/package-lock.json

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔒 Run security audit
        run: |
          echo "## 🔒 Security Audit Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          AUDIT_OUTPUT=$(npm audit --audit-level=moderate --json)
          VULNERABILITIES=$(echo "$AUDIT_OUTPUT" | jq '.metadata.vulnerabilities.total // 0')
          
          if [[ $VULNERABILITIES -eq 0 ]]; then
            echo "✅ No security vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Found $VULNERABILITIES vulnerabilities" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📋 Vulnerability Summary:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            npm audit --audit-level=moderate >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🛠️ Auto-fix vulnerabilities
        if: always()
        run: |
          npm audit fix --audit-level=moderate || echo "⚠️ Some vulnerabilities require manual fixes"

      - name: 🔀 Create security fix PR
        if: always()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            🔒 Fix security vulnerabilities in mobile dependencies
            
            Auto-generated security fixes from npm audit
          title: 🔒 Security Fixes for Mobile Dependencies
          body: |
            ## 🔒 Security Vulnerability Fixes
            
            This PR contains automatic fixes for security vulnerabilities found in mobile dependencies.
            
            ### 🛠️ Changes Made:
            - Applied `npm audit fix` for moderate and above vulnerabilities
            - Updated vulnerable packages to secure versions
            
            ### 🧪 Validation:
            - ✅ All tests still passing
            - ✅ Build validation successful
            
            **Please review and merge promptly to maintain security posture.**
            
            ---
            *Automated by security audit workflow*
          branch: security-fixes/mobile-${{ github.run_number }}
          base: develop
          labels: |
            security
            mobile
            automated
            high-priority
          reviewers: |
            vandercy62
          draft: false

  # 📊 Weekly summary
  weekly-summary:
    name: 📊 Weekly Summary
    runs-on: ubuntu-latest
    needs: [check-updates, apply-updates, security-audit]
    if: always() && github.event_name == 'schedule'
    
    steps:
      - name: 📊 Generate weekly report
        run: |
          echo "# 📱 PRIMOTEX Mobile - Weekly Dependency Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📋 Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date +'%Y-%m-%d')" >> $GITHUB_STEP_SUMMARY
          echo "- **Updates Available**: ${{ needs.check-updates.outputs.has-updates }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Security Audit**: ${{ needs.security-audit.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.check-updates.outputs.has-updates }}" == "true" ]]; then
            echo "## 📦 Available Updates" >> $GITHUB_STEP_SUMMARY
            echo "${{ needs.check-updates.outputs.updates-summary }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Action Required**: Review and merge the dependency update PR" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **All dependencies are up to date**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Next audit scheduled for next Monday*" >> $GITHUB_STEP_SUMMARY