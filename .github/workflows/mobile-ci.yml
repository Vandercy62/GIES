# 🧪 Mobile CI Pipeline - PRIMOTEX ERP
# Executa testes automáticos em cada PR e push

name: Mobile CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'frontend/mobile/**'
      - '.github/workflows/mobile-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'frontend/mobile/**'
      - '.github/workflows/mobile-ci.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: ./frontend/mobile

jobs:
  # 🔍 Análise de código e linting
  lint:
    name: 🔍 Code Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/mobile/package-lock.json

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🎯 Run TypeScript check
        run: npm run type-check

      - name: 📊 Run security audit
        run: npm audit --audit-level=moderate

  # 🧪 Testes unitários e de integração
  test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📱 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/mobile/package-lock.json

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests with coverage
        run: npm test -- --coverage --watchAll=false --passWithNoTests

      - name: 📊 Upload coverage reports
        if: matrix.node-version == 18
        uses: codecov/codecov-action@v3
        with:
          directory: ./frontend/mobile/coverage
          flags: mobile
          name: mobile-coverage
          fail_ci_if_error: false

      - name: 📈 Comment coverage on PR
        if: github.event_name == 'pull_request' && matrix.node-version == 18
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./frontend/mobile/coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          title: 📊 Mobile Test Coverage

  # 🔒 Security scanning
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔒 Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: 🔒 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: 📦 Setup Node.js for security scan
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/mobile/package-lock.json

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🛡️ Run npm audit
        run: npm audit --audit-level=high

  # 📱 Build validation
  build-validation:
    name: 📱 Build Validation
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [lint, test]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/mobile/package-lock.json

      - name: 🎯 Setup Expo CLI
        run: npm install -g @expo/cli

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Validate Expo configuration
        run: npx expo doctor

      - name: 📱 Export for web (validation)
        run: npx expo export --platform web

      - name: 📊 Analyze bundle size
        run: |
          if [ -d "dist" ]; then
            echo "📦 Bundle Analysis:"
            du -sh dist/
            find dist/ -name "*.js" -type f -exec du -h {} + | sort -rh | head -10
          fi

  # 📈 Performance testing
  performance:
    name: 📈 Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [build-validation]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/mobile/package-lock.json

      - name: 📦 Install dependencies
        run: npm ci

      - name: ⚡ Run performance tests
        run: |
          echo "📊 Performance Metrics:"
          npm run test:performance || echo "Performance tests not yet implemented"

      - name: 📏 Bundle size analysis
        run: |
          echo "📦 Analyzing bundle size impact..."
          npm run analyze-bundle || echo "Bundle analysis not yet configured"

  # ✅ Integration check
  integration:
    name: ✅ Integration Check
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [lint, test, security, build-validation]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/mobile/package-lock.json

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run integration tests
        run: npm run test:integration || npm test

      - name: ✅ All checks passed
        run: |
          echo "🎉 All CI checks passed successfully!"
          echo "📱 Mobile app is ready for deployment"

  # 📋 Summary
  ci-summary:
    name: 📋 CI Summary
    runs-on: ubuntu-latest
    needs: [lint, test, security, build-validation, performance]
    if: always()
    
    steps:
      - name: 📊 Generate summary
        run: |
          echo "## 📱 Mobile CI Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Lint | ${{ needs.lint.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Tests | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔒 Security | ${{ needs.security.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 📱 Build | ${{ needs.build-validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 📈 Performance | ${{ needs.performance.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.lint.result }}" == "success" && "${{ needs.test.result }}" == "success" && "${{ needs.security.result }}" == "success" && "${{ needs.build-validation.result }}" == "success" ]]; then
            echo "✅ **All checks passed!** Mobile app is ready for deployment." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some checks failed.** Please review the logs above." >> $GITHUB_STEP_SUMMARY
          fi

      - name: 💬 Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Mobile CI Pipeline Summary')
            );
            
            const body = `## 📱 Mobile CI Pipeline Summary
            
| Job | Status |
|-----|--------|
| 🔍 Lint | ${{ needs.lint.result }} |
| 🧪 Tests | ${{ needs.test.result }} |
| 🔒 Security | ${{ needs.security.result }} |
| 📱 Build | ${{ needs.build-validation.result }} |
| 📈 Performance | ${{ needs.performance.result }} |

${needs.lint.result === 'success' && needs.test.result === 'success' && needs.security.result === 'success' && needs.build-validation.result === 'success' ? '✅ **All checks passed!** Mobile app is ready for deployment.' : '❌ **Some checks failed.** Please review the logs above.'}

---
🤖 *Automated by PRIMOTEX Mobile CI Pipeline*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }